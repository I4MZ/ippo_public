plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.i4mz'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    //s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.172'


    //configuration
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // log
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    //jpa and postgresql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '6.1.7.Final', ext: 'pom'

    //oauth2 and security

    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'

    //redis
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.1.6'

    //lombok and etc
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    // validation
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'

    // langchain
    implementation group: 'dev.langchain4j', name: 'langchain4j-core', version: '0.24.0'

}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
